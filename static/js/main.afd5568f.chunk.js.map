{"version":3,"sources":["Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afd5568f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput , setUserInput] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: ''\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) =>{\r\n    //     return {...prevState, enteredTitle: event.target.value};\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // // setUserInput({\r\n    // //     ...userInput,\r\n    // //     enteredAmount: event.target.value,\r\n    // // });\r\n    // setUserInput((prevState) =>{\r\n    //     return {...prevState, enteredAmount: event.target.value};\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // // setUserInput({\r\n    // //     ...userInput,\r\n    // //     enteredDate: event.target.value,\r\n    // // });\r\n    // setUserInput((prevState) =>{\r\n    //     return {...prevState, enteredDate: event.target.value};\r\n    // });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2020-01-01\"  \r\n            max=\"2025-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler}\r\n        onCancel = {stopEditingHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) =>{\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props)=>{\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\nreturn (\r\n    <div className='expenses-filter'>\r\n        <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                <option value='2024'>2024</option>\r\n                <option value='2023'>2023</option>\r\n                <option value='2022'>2022</option>\r\n                <option value='2021'>2021</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) =>{\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (<div className='expense-date'>\r\n    <div className='expense-date__month'>{month}</div>\r\n    <div className='expense-date__year'>{year}</div>\r\n    <div className='expense-date__day'>{day}</div>\r\n  </div>);\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate  from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css'\r\n\r\nconst ExpenseItem = (props) => {  \r\n  return (\r\n  <li>\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n      <div className='expense-item__price'>₹{props.amount}</div>\r\n      </div>\r\n      \r\n\r\n    </Card>\r\n  </li>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\n\r\nconst ExpensesList = props =>{\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found No Expenses</h2>\r\n  }\r\n  return <ul className='expenses-list'>\r\n    {props.items.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ))}\r\n  </ul>\r\n\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key = {dataPoint.label} \r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props =>{\r\n    const chartDataPoints = [\r\n        {label : 'Jan', value: 0},\r\n        {label : 'Feb', value: 0},\r\n        {label : 'Mar', value: 0},\r\n        {label : 'Apr', value: 0},\r\n        {label : 'May', value: 0},\r\n        {label : 'Jun', value: 0},\r\n        {label : 'Jul', value: 0},\r\n        {label : 'Aug', value: 0},\r\n        {label : 'Sep', value: 0},\r\n        {label : 'Oct', value: 0},\r\n        {label : 'Nov', value: 0},\r\n        {label : 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n\r\n    return <Chart dataPoints = {chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses = {filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses}></ExpensesList>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport Expenses from \"./Components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2021, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2022, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2022, 6, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  // return React.createElement('div',\n  //  {},\n  //  React.createElement('h2', {}, \"Let's get Started!\" ),\n  // React.createElement(Expenses,{items:expenses})\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}> </Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}